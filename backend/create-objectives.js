const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createObjectives() {
  try {
    console.log('üéØ Creando objetivos de ejemplo...');

    // Obtener los ejes estrat√©gicos existentes
    const strategicAxes = await prisma.strategicAxis.findMany({
      where: { year: 2025 },
      orderBy: { code: 'asc' }
    });

    if (strategicAxes.length === 0) {
      console.log('‚ùå No se encontraron ejes estrat√©gicos para 2025');
      return;
    }

    // Obtener algunos departamentos
    const departments = await prisma.department.findMany({
      take: 5
    });

    const objectivesData = [
      // Objetivos para EE-001: Modernizaci√≥n y Digitalizaci√≥n del Estado
      {
        strategicAxisCode: 'EE-001',
        objectives: [
          {
            name: 'Implementar plataforma digital integrada de servicios ciudadanos',
            description: 'Desarrollar y poner en funcionamiento una plataforma √∫nica que integre todos los servicios digitales ofrecidos a los ciudadanos',
            code: 'OBJ-001-01'
          },
          {
            name: 'Digitalizar el 90% de los procesos administrativos internos',
            description: 'Transformar los procesos manuales en procesos digitales para mejorar la eficiencia operativa',
            code: 'OBJ-001-02'
          },
          {
            name: 'Establecer sistema de interoperabilidad entre instituciones',
            description: 'Crear mecanismos t√©cnicos para el intercambio seguro de informaci√≥n entre diferentes entidades p√∫blicas',
            code: 'OBJ-001-03'
          }
        ]
      },
      // Objetivos para EE-002: Desarrollo del Talento Humano Institucional
      {
        strategicAxisCode: 'EE-002',
        objectives: [
          {
            name: 'Capacitar al 100% del personal en competencias digitales',
            description: 'Implementar programa integral de capacitaci√≥n en herramientas digitales y tecnol√≥gicas para todo el personal',
            code: 'OBJ-002-01'
          },
          {
            name: 'Desarrollar programa de liderazgo para mandos medios',
            description: 'Fortalecer las capacidades de liderazgo y gesti√≥n de los supervisores y coordinadores',
            code: 'OBJ-002-02'
          },
          {
            name: 'Implementar sistema de gesti√≥n del conocimiento institucional',
            description: 'Crear mecanismos para capturar, almacenar y compartir el conocimiento organizacional',
            code: 'OBJ-002-03'
          }
        ]
      },
      // Objetivos para EE-003: Gesti√≥n Financiera Eficiente y Transparente
      {
        strategicAxisCode: 'EE-003',
        objectives: [
          {
            name: 'Alcanzar 95% de ejecuci√≥n presupuestaria eficiente',
            description: 'Optimizar la planificaci√≥n y ejecuci√≥n del presupuesto institucional para maximizar el impacto de los recursos',
            code: 'OBJ-003-01'
          },
          {
            name: 'Implementar sistema de monitoreo financiero en tiempo real',
            description: 'Establecer herramientas de seguimiento continuo del estado financiero y presupuestario',
            code: 'OBJ-003-02'
          },
          {
            name: 'Reducir en 50% los tiempos de procesos de adquisiciones',
            description: 'Agilizar y optimizar los procedimientos de compras y contrataciones p√∫blicas',
            code: 'OBJ-003-03'
          }
        ]
      },
      // Objetivos para EE-004: Planificaci√≥n Estrat√©gica e Innovaci√≥n Institucional
      {
        strategicAxisCode: 'EE-004',
        objectives: [
          {
            name: 'Fortalecer sistema de planificaci√≥n estrat√©gica institucional',
            description: 'Mejorar los procesos de planificaci√≥n, seguimiento y evaluaci√≥n estrat√©gica de la instituci√≥n',
            code: 'OBJ-004-01'
          },
          {
            name: 'Implementar laboratorio de innovaci√≥n p√∫blica',
            description: 'Crear espacio dedicado a la experimentaci√≥n y desarrollo de soluciones innovadoras',
            code: 'OBJ-004-02'
          },
          {
            name: 'Establecer alianzas estrat√©gicas con sector privado y academia',
            description: 'Desarrollar partnerships para impulsar la innovaci√≥n y mejora de servicios p√∫blicos',
            code: 'OBJ-004-03'
          }
        ]
      },
      // Objetivos para EE-005: Atenci√≥n Ciudadana de Calidad
      {
        strategicAxisCode: 'EE-005',
        objectives: [
          {
            name: 'Alcanzar 90% de satisfacci√≥n ciudadana en servicios',
            description: 'Mejorar la calidad y experiencia de los servicios brindados a los ciudadanos',
            code: 'OBJ-005-01'
          },
          {
            name: 'Reducir tiempos de respuesta en un 60%',
            description: 'Optimizar los procesos de atenci√≥n para brindar respuestas m√°s r√°pidas y eficientes',
            code: 'OBJ-005-02'
          },
          {
            name: 'Implementar sistema de gesti√≥n de quejas y sugerencias',
            description: 'Establecer mecanismos efectivos para recibir, procesar y responder a la retroalimentaci√≥n ciudadana',
            code: 'OBJ-005-03'
          }
        ]
      }
    ];

    let totalCreated = 0;

    for (const axisData of objectivesData) {
      // Encontrar el eje estrat√©gico correspondiente
      const strategicAxis = strategicAxes.find(axis => axis.code === axisData.strategicAxisCode);
      
      if (!strategicAxis) {
        console.log(`‚ö†Ô∏è No se encontr√≥ el eje estrat√©gico ${axisData.strategicAxisCode}`);
        continue;
      }

      console.log(`\nüìã Creando objetivos para ${strategicAxis.name} (${strategicAxis.code}):`);

      for (const objData of axisData.objectives) {
        try {
          // Verificar si ya existe
          const existing = await prisma.objective.findFirst({
            where: {
              code: objData.code,
              strategicAxisId: strategicAxis.id
            }
          });

          if (existing) {
            console.log(`   ‚ö†Ô∏è Ya existe: ${objData.code}`);
            continue;
          }

          // No necesitamos asignar departamento ya que se hereda del eje estrat√©gico

          const objective = await prisma.objective.create({
            data: {
              name: objData.name,
              description: objData.description,
              code: objData.code,
              strategicAxisId: strategicAxis.id,
              isActive: true
            }
          });

          console.log(`   ‚úÖ Creado: ${objective.code} - ${objective.name}`);
          totalCreated++;

        } catch (error) {
          console.log(`   ‚ùå Error creando ${objData.code}: ${error.message}`);
        }
      }
    }

    console.log(`\nüéâ ¬°Proceso completado! Se crearon ${totalCreated} objetivos.`);

    // Mostrar resumen
    const summary = await prisma.objective.groupBy({
      by: ['strategicAxisId'],
      _count: {
        id: true
      }
    });

    console.log('\nüìä Resumen por eje estrat√©gico:');
    for (const item of summary) {
      const axis = strategicAxes.find(a => a.id === item.strategicAxisId);
      if (axis) {
        console.log(`   ${axis.code}: ${item._count.id} objetivos`);
      }
    }

  } catch (error) {
    console.error('‚ùå Error general:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createObjectives();
